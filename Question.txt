Harish, an engineering student needs to submit his final year project. He decides 
to create a Robot which can be controlled by a set of instructions.  He also
decides that a grid (of X and Y axis) should be defined and the robot should 
move only within that grid.  The set of instructions to move the robot should be
given as a single message (string) and the Robot should accordingly move and
reach the expected location.  If the given instructions lead to a position which is 
out of the given grid, the Robot should stop at the last valid instruction.

Harish decides to write a function  named moveRobot that should process the 
given inputs and return a string representing the final position of the Robot.

The funtion moveRobot will take 4 input parameters that define the size of the 
grid(X and Y axis), the current position of the Robot, and the message (string)
containing the set of movement instructions.

The first two input parameters define the size of the grid:
input1 = X axis of the grid
input2 = Y axis of the grid

Note that input1 and input2 will always be >0.  So, the valid grid area for the 
robot's movement should be the rectangular area formed between the diagonal
ends (0,0) and (X,Y).

The third parameter defines the current (starting) position of the robot.
input3 = current position of the robot, represented as a string containing 3 
values separated by a -(hyphen).  The format of input3 is x-y-d where x and y 
represent the current(starting) position of the robot and D represenets the
direction where the robot is currently facing.  Valid values for direction D are E,
W, N, S, SE, SW, NE, NW representing East, West, North, South, South East,
South West, North East and North West respectively.

The fourth input parameter represents single message containing the set of 
instructions to move the robot.
input4 = movement instructions to the robot, represented as a string containing
the instructions separated by space.  The message will consist of a series of M,
L, I, R or r, where
M means "Move 1 unit forward in the direction that the robot is facing".
L means "Turn 90 degree towards left"
l means "Turn 45 degree towards left"
R means "Turn 90 degree towards right"
r means "Turn 45 degree towards right"

Note that for turning 45 degree the instructions used are r and l i.e. lower-case R 
and lower-case L.

Output expected to be returned by the function - The function is expected to 
process the given inputs and return a string representing the final position of the
Robot.  The return string should be of the format x-y-D, where x and y represent
the final(end) position of the Robot and D represents the direction where the 
robot is finally facing.  Valid values for direction D are E,W,N,S,SE,SW,NE,NW 
representing East, West, North, South, South East,South West, North East and 
North West respectively.

Note:-
1. You can assume the grid to the similar to the 1st quadrant of the regular
graph sheet.  In a regular graph sheet of dimensions x units and y units.
(0,0) is the bottom left corner and (x,y) is the top right corner Ex. For a
grip of 5 x 5, the bottom left corner will be (0,0) and top right corner will be
(5,5).

2.  The starting position of the robto (third input parameter) will be any
 position on the grid i.e. it need not always be (0,0)

3.  You can assume that the current position(starting position, specified in
input3) will always be a valid position within the specified grid.

4. IMPORTANT - Note that the instructions L, l, R, and r only change the 
direction of the robot without moving it. The instrction M moves the robot 
1 unit forward in the direction that the robot is facing.

5.  A note about the instruction M - If the robot is facing towards a direction,
then the robot is able to move in that particular direction of an unit 1. Eg. 
If the robot position is (3,2) facing North-East, the instruction M will make it
move to the position (4,3). 

6. Invalid moves should not be allowed - Any move that could lead the robot 
to a position beyond(outside) the defined x and y axis of the grid OR below 0 on
either x or y axis, should be considered an invalid move.


Example1:-
input1: x = 3
input2: y = 3
input3: 2-2-E
input4: R M L M L M

Output: This function should return 3-2-N

Explaination: 
     The size of the grid is 3x3 units. Current position of the robot is (2,2)
facing East. After processing the set of instructions given in input4, the new 
position will be in (3,2) facing North.  So, the function is expected to return
the output in the format x-y-D i.e. 3-2-N

Example2:-
input1: x = 3
input2: y = 4
input3: 2-2-E
input4: R M L M L M R M

Output: This function shoudl return 3-2-E-ER

Explaination:
     The size of the grid is 3x4 units.  Current position of the robot is (2,2)
facing East. After processing the set of instructions givin in input4, the new
position will be in (3,2) facing East. Note that the last instruction(M) leads to 
a position outside the grid, so the valid moves stop at R which is the second last
instruction.  In this case, the function is expected to return the output 
representing the last valid position appended with "-ER" representing ERROR.
So, the function should return the output as 3-2-E-ER.